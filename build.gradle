plugins {
	id 'java'
	id 'jacoco'
	id "org.sonarqube" version "2.8"
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

group = 'com.speech4j'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_14
targetCompatibility = JavaVersion.VERSION_14

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom 'org.junit:junit-bom:5.6.0'
		mavenBom 'org.testcontainers:testcontainers-bom:1.13.0'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.projectlombok:lombok'
	annotationProcessor "org.projectlombok:lombok"
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.springdoc:springdoc-openapi-ui:1.3.0'

	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation 'org.junit.jupiter:junit-jupiter-params'
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'

	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
	useJUnitPlatform()
}

sonarqube {
	properties {
		property "sonar.projectKey", "speech4j_tenant-service"
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

jacocoTestReport {
	reports {
		xml.enabled true
		xml.destination file("${buildDir}/reports/jacoco/text.xml")
		html.enabled false
		csv.enabled false
	}
}

project.tasks["sonarqube"].dependsOn "jacocoTestReport"

tasks.withType(JavaCompile).each {
	it.options.compilerArgs.add('--enable-preview')
}

test {
	jvmArgs(['--enable-preview'])
}